---

- name: install virtualenv and wrapper using pip
  pip: name={{ item.pkg }} state=latest
  with_items:
    - { pkg: virtualenv }
    - { pkg: virtualenvwrapper }

- name: create log directory
  file: state=directory dest={{ flask_log_dir }} owner=www-data group=adm

- name: install basic pip packages
  become: no
  pip: name={{ item.pkg }} version={{ item.version }} virtualenv="{{venv}}"
  with_items:
    - { pkg: gunicorn, version: 19.4 }

- name: deploy repos
  become: no
  git: >
    dest="{{ flask_app_home }}"
    repo="{{ item.repo_url }}"
    version="{{ item.version }}"
    refspec=+refs/heads/*:refs/remotes/origin/*
    update=yes
    accept_hostkey=yes
    track_submodules=yes
    force="{{ git_repo_force_clean|default('no') }}"
  with_items:
    - { repo_url: "{{ git_repo_url }}", version: "{{git_repo_version}}" }
  register: git_output
  tags: deploy

- name: Find all stale pyc files and remove them from app folder
  shell: find {{flask_app_home}} -name '*.pyc' -delete
  when: git_output.changed
  notify: restart service apps
  tags: deploy

- name: install supervisord config
  template: src=supervisord.j2 dest=/etc/supervisord.d/flask.conf owner=root group=root mode=0755
  notify:
    - reload supervisord
  tags: configure

- name: configure logrotate for app logs
  template: src=gunicorn_logrotate.j2 dest=/etc/logrotate.d/gunicorn owner=root group=root mode=0644
  tags: configure

- name: template nginx config
  template: src=nginx.conf.j2 dest=/etc/nginx/sites-enabled/media owner=root group=root mode=0644
  tags: configure
